<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <record id="product.group_product_variant" model="res.groups">
            <field name="name">Manage Product Variants</field>
            <field name="robo_front" eval="True"/>
            <field name="front_help">Matomi produktų variantai</field>
            <field name="front_category_id"
                   eval="ref('robo_basic.front_res_groups_category_stock')"/>
        </record>
        <record id="group_robo_front_pricelist" model="res.groups">
            <field name="name">Kainoraščiai (Front)</field>
            <field name="robo_front" eval="True"/>
            <field name="front_help">Prieiga prie kainoraščių</field>
            <field name="front_category_id" eval="ref('robo_basic.front_res_groups_category_stock')"/>
        </record>
		<record id="group_simplified_stock_multi_locations" model="res.groups">
            <field name="name">Supaprastintas sandėlis: Išplėstinės lokacijos</field>
        </record>
        <record id="group_robo_serial_numbers" model="res.groups">
            <field name="name">Serijos numeriai</field>
            <field name="robo_front" eval="True"/>
            <field name="front_help">Prieiga prie serijos numerių</field>
            <field name="front_category_id" eval="ref('robo_basic.front_res_groups_category_stock')"/>
        </record>
        <record id="group_robo_landed_costs" model="res.groups">
            <field name="name">Savikainos koregavimas</field>
            <field name="robo_front" eval="True"/>
            <field name="front_help">Leidžiama koreguoti produktų savikainą</field>
            <field name="front_category_id" eval="ref('robo_basic.front_res_groups_category_stock')"/>
        </record>

		<record id="group_show_intrastat_fields" model="res.groups">
			<field name="name">Show Intrastat fields in product settings</field>
            <field name="robo_front" eval="True"/>
            <field name="front_help">
				Show Intrastat fields in product card and filters
			</field>
            <field name="front_category_id" eval="ref('robo_basic.front_res_groups_category_stock')"/>
        </record>

        <record id="robo_stock_extended" model="res.groups">
            <field name="name">Robo Stock Extended</field>
            <field name="implied_ids"
                   eval="[(4, ref('robo_basic.robo_show_history_links')), (4, ref('robo_basic.robo_URL_link')),
                   (4, ref('robo_stock.group_show_intrastat_fields'))]"/>
        </record>
		<record id="group_robo_product_mapping" model="res.groups">
            <field name="name">Product mapping for document processing</field>
			<field name="front_help">Leidžia sujungti tiekėjų produktus su sandėlio produktais dokumentuose, naudojama, kai tokia pati prekė importuojama iš kelių tiekėjų, tačiau sandelyje norima ją matyti kaip 1 prekę</field>
            <field name="robo_front" eval="True"/>
            <field name="front_category_id" eval="ref('robo_basic.front_res_groups_category_stock')"/>
        </record>
        <record id="purchase.group_purchase_user" model="res.groups">
            <field name="name">User: Own Documents Only</field>
            <field name="implied_ids" eval="[(4, ref('base.group_user'))]"/>
            <field name="category_id" ref="base.module_category_purchase_management"/>
            <field name="robo_front" eval="True"/>
            <field name="front_help">Matomi tik asmeninių pirkimų dokumentai</field>
            <field name="front_category_id" eval="ref('robo_basic.front_res_groups_category_purchases')"/>
        </record>
        <record id="group_purchase_user_all" model="res.groups">
            <field name="name">User: All Documents</field>
            <field name="implied_ids" eval="[(4, ref('purchase.group_purchase_user'))]"/>
            <field name="category_id" ref="base.module_category_purchase_management"/>
            <field name="robo_front" eval="True"/>
            <field name="front_help">Prieiga prie visų pirkimų dokumentai</field>
            <field name="front_category_id" eval="ref('robo_basic.front_res_groups_category_purchases')"/>
        </record>
        <record id="purchase.group_purchase_manager" model="res.groups">
            <field name="name">Manager</field>
            <field name="category_id" ref="base.module_category_purchase_management"/>
            <field name="implied_ids" eval="[(4, ref('robo_stock.group_purchase_user_all'))]"/>
            <field name="users" eval="[(4, ref('base.user_root'))]"/>
            <field name="robo_front" eval="True"/>
            <field name="front_help">Visų pirkimo dokumentų vadovas: pilnas pirkimo dokumentų valdymas</field>
            <field name="front_category_id" eval="ref('robo_basic.front_res_groups_category_purchases')"/>
        </record>
        <record id="robo_stock_reports" model="res.groups">
            <field name="name">Robo Stock Reports</field>
            <field name="robo_front" eval="True"/>
            <field name="front_help">Priega prie sandėlio ataskaitų</field>
            <field name="front_category_id" eval="ref('robo_basic.front_res_groups_category_stock')"/>
        </record>
        <record id="group_front_warehouse_manager" model="res.groups">
            <field name="name">Front Warehouse Manager</field>
        </record>
		<record id="robo_stock_pdf_pickings" model="res.groups">
            <field name="name">Show purchase invoice PDF in picking</field>
			<field name="front_help">Leidžia matyti pirkimo sąskaitą važtaraščiuose</field>
            <field name="robo_front" eval="True"/>
            <field name="front_category_id" eval="ref('robo_basic.front_res_groups_category_stock')"/>
        </record>
        <record id="stock.group_adv_location" model="res.groups">
            <field name="implied_ids"
                   eval="[(4, ref('group_front_warehouse_manager'))]"/>
        </record>
        <record id="stock_extend.group_robo_stock" model="res.groups">
            <field name="implied_ids"
                   eval="[(4, ref('robo.robo_reports'))]"/>
        </record>
        <record id="stock_extend.group_robo_stock" model="res.groups">
            <field name="implied_ids"
                   eval="[(4, ref('robo_stock.robo_stock_reports'))]"/>
        </record>

        <record id="robo_basic.group_robo_free_manager" model="res.groups">
            <field name="implied_ids"
                   eval="[(4, ref('stock_extend.group_robo_stock')), (4, ref('purchase.group_purchase_manager'))]"/>
        </record>
        <record id="robo_basic.group_robo_premium_manager" model="res.groups">
            <field name="implied_ids"
                   eval="[(4, ref('stock_extend.group_robo_stock')), (4, ref('purchase.group_purchase_manager'))]"/>
        </record>
        <record id="stock_extend.group_robo_stock" model="res.groups">
            <field name="implied_ids"
                   eval="[(4, ref('robo_stock.robo_stock_extended'))]"/>
        </record>

        <record id="group_super_stock_manager" model="res.groups">
		 	<field name="category_id" ref="base.module_category_warehouse_management"/>
		 	<field name="implied_ids" eval="[(4, ref('stock.group_stock_manager'))]"/>
            <field name="name">Super Manager</field>
        </record>

		<record id="robo_basic.group_robo_premium_manager" model="res.groups">
            <field name="implied_ids"
                   eval="[(4, ref('robo_stock.group_super_stock_manager'))]"/>
        </record>

		<record id="robo_basic.group_robo_premium_accountant" model="res.groups">
            <field name="implied_ids"
                   eval="[(4, ref('robo_stock.group_super_stock_manager'))]"/>
        </record>

        <function name="install_stock_policy" model="robo.company.settings"/>
        <record id="robo_basic.group_robo_premium_accountant" model="res.groups">
            <field name="implied_ids"
                   eval="[(4, ref('robo_stock.robo_stock_extended'))]"/>
        </record>

        <record id="group_stock_user_own_rule" model="ir.rule">
            <field name="name">Own Stock</field>
            <field name="model_id" ref="purchase.model_purchase_order"/>
            <field name="domain_force">[('create_uid', '=', user.id)]</field>
            <field name="groups" eval="[(4, ref('purchase.group_purchase_user'))]"/>
        </record>

        <record id="group_stock_user_all_rule" model="ir.rule">
            <field name="name">All Stock</field>
            <field name="model_id" ref="purchase.model_purchase_order" />
            <field name="domain_force">[(1,'=',1)]</field>
            <field name="groups" eval="[(4, ref('robo_stock.group_purchase_user_all'))]"/>
        </record>

		<record id="group_stock_user_related_invoice_rule" model="ir.rule">
            <field name="name">Purchase - related invoice</field>
            <field name="model_id" ref="account.model_account_invoice"/>
            <field name="domain_force">[('invoice_line_ids.purchase_id', '!=', False)]</field>
            <field name="groups" eval="[(4, ref('robo_stock.group_purchase_user_all'))]"/>
        </record>

		<record id="group_stock_user_related_invoice_line_rule" model="ir.rule">
            <field name="name">Purchase - related invoice lines</field>
            <field name="model_id" ref="account.model_account_invoice_line"/>
            <field name="domain_force">[('purchase_id', '!=', False)]</field>
            <field name="groups" eval="[(4, ref('robo_stock.group_purchase_user_all'))]"/>
        </record>

		<delete id="stock.stock_location_comp_rule" model="ir.rule"/>
		<record id="stock_location_comp_rule" model="ir.rule">
			<field name="name">Stock Location: Limitation</field>
			<field name="model_id" ref="stock.model_stock_location"/>
			<field name="groups" eval="[(4, ref('stock.group_stock_user')), (4, ref('stock.group_stock_manager'))]"/>
			<field name="domain_force">[
				'&amp;',
					'|',
						('company_id','=',False),
						('company_id','child_of',[user.company_id.id]),
					'|',
						('user_ids', '=', False),
				        ('user_ids', '=', user.id),
			]</field>
		</record>

    	<record id="stock_location_comp_rule_super_manager" model="ir.rule">
			<field name="name">Stock Location: Super Warehouse Manager</field>
			<field name="model_id" ref="stock.model_stock_location"/>
			<field name="groups" eval="[(4, ref('robo_stock.group_super_stock_manager'))]"/>
			<field name="domain_force">['|',('company_id','=',False),('company_id','child_of',[user.company_id.id])]</field>
		</record>

	    <delete id="stock.stock_quant_rule" model="ir.rule"/>
		<record id="stock_quant_rule" model="ir.rule">
	        <field name="name">Stock Quant: Limitation</field>
	        <field name="model_id" ref="stock.model_stock_quant"/>
	        <field name="groups" eval="[(4, ref('stock.group_stock_user')), (4, ref('stock.group_stock_manager'))]"/>
	        <field name="domain_force">[
				'&amp;',
					'|',
						('company_id','=',False),
						('company_id','child_of',[user.company_id.id]),
					'|',
						('location_id.user_ids', '=', False),
				        ('location_id.user_ids', '=', user.id),
			]</field>
	    </record>

    	<record id="stock_quant_rule_super_manager" model="ir.rule">
			<field name="name">Stock Quant: Super Warehouse Manager</field>
			<field name="model_id" ref="stock.model_stock_quant"/>
			<field name="groups" eval="[(4, ref('robo_stock.group_super_stock_manager'))]"/>
			<field name="domain_force">['|',('company_id','=',False),('company_id','child_of',[user.company_id.id])]</field>
		</record>

	    <delete id="stock.stock_move_rule" model="ir.rule"/>
		<record id="stock_move_rule" model="ir.rule">
            <field name="name">Stock Move: Limitation</field>
	        <field name="model_id" ref="stock.model_stock_move"/>
	        <field name="groups" eval="[(4, ref('stock.group_stock_user')), (4, ref('stock.group_stock_manager'))]"/>
	        <field name="domain_force">[
				'&amp;',
					'|',
						('company_id','=',False),
						('company_id','child_of',[user.company_id.id]),
					'&amp;',
						'|',
							('location_id.user_ids', '=', False),
					        ('location_id.user_ids', '=', user.id),
						'|',
							('location_dest_id.user_ids', '=', False),
					        ('location_dest_id.user_ids', '=', user.id),
			]</field>
	    </record>

    	<record id="stock_move_rule_super_manager" model="ir.rule">
			<field name="name">Stock Move: Super Warehouse Manager</field>
			<field name="model_id" ref="stock.model_stock_move"/>
			<field name="groups" eval="[(4, ref('robo_stock.group_super_stock_manager'))]"/>
			<field name="domain_force">['|',('company_id','=',False),('company_id','child_of',[user.company_id.id])]</field>
		</record>

	    <delete id="stock.stock_picking_rule" model="ir.rule"/>
		<record id="stock_picking_rule" model="ir.rule">
	        <field name="name">Stock Picking: Limitation</field>
	        <field name="model_id" ref="stock.model_stock_picking"/>
	        <field name="groups" eval="[(4, ref('stock.group_stock_user')), (4, ref('stock.group_stock_manager'))]"/>
	        <field name="domain_force">[
				'&amp;',
					'|',
						('company_id','=',False),
						('company_id','child_of',[user.company_id.id]),
					'&amp;',
						'|','|',
			        	 	('location_id', '=', False),
							('location_id.user_ids', '=', False),
					        ('location_id.user_ids', '=', user.id),
						'|','|',
						    ('location_dest_id', '=', False),
							('location_dest_id.user_ids', '=', False),
					        ('location_dest_id.user_ids', '=', user.id),
			]</field>
	    </record>

    	<record id="stock_picking_rule_super_manager" model="ir.rule">
			<field name="name">Stock Picking: Super Warehouse Manager</field>
			<field name="model_id" ref="stock.model_stock_picking"/>
			<field name="groups" eval="[(4, ref('robo_stock.group_super_stock_manager'))]"/>
			<field name="domain_force">['|', ('company_id','=',False), ('company_id','child_of',[user.company_id.id])]</field>
		</record>

		<delete id="stock.stock_picking_type_rule" model="ir.rule"/>
		<record id="stock_picking_type_rule" model="ir.rule">
	        <field name="name">Stock Picking Type: Limitation</field>
	        <field name="model_id" ref="stock.model_stock_picking_type"/>
	        <field name="groups" eval="[(4, ref('stock.group_stock_user')), (4, ref('stock.group_stock_manager'))]"/>
	        <field name="domain_force">[
	        	'&amp;',
	        	 	 '|',
	        	 	 	('warehouse_id', '=', False),
	        	 	 	'|',
	        	 	 		('warehouse_id.company_id', '=', False),
	        	 	 		('warehouse_id.company_id', 'child_of', [user.company_id.id]),
		        	 '&amp;',
			        	 '|', '|',
			        	      ('default_location_dest_id', '=', False),
			        	      ('default_location_dest_id.user_ids', '=', False),
						      ('default_location_dest_id.user_ids', '=', user.id),
					     '|', '|',
							  ('default_location_src_id', '=', False),
							  ('default_location_src_id.user_ids', '=', False),
						      ('default_location_src_id.user_ids', '=', user.id),
			]</field>
    	</record>

    	<record id="stock_picking_type_rule_super_manager" model="ir.rule" >
	        <field name="name">Stock Picking Type: Super Warehouse Manager</field>
	        <field name="model_id" ref="stock.model_stock_picking_type"/>
	        <field name="groups" eval="[(4, ref('robo_stock.group_super_stock_manager'))]"/>
	        <field name="domain_force">[
	        	 	 '|',
	        	 	 	('warehouse_id', '=', False),
	        	 	 	'|',
	        	 	 		('warehouse_id.company_id', '=', False),
	        	 	 		('warehouse_id.company_id', 'child_of', [user.company_id.id]),
	        ]</field>
    	</record>

		<record id="stock_forecast_rule" model="ir.rule">
	        <field name="name">Stock Forecast Report: Limitation</field>
	        <field name="model_id" ref="stock.model_report_stock_forecast"/>
	        <field name="groups" eval="[(4, ref('stock.group_stock_user')), (4, ref('stock.group_stock_manager'))]"/>
	        <field name="domain_force">[
				'|',
					('location_id.user_ids', '=', False),
					('location_id.user_ids', '=', user.id),
			]</field>
	    </record>

    	<record id="stock_forecast_rule_super_manager" model="ir.rule">
			<field name="name">Stock Forecast Report: Super Warehouse Manager</field>
			<field name="model_id" ref="stock.model_report_stock_forecast"/>
			<field name="groups" eval="[(4, ref('robo_stock.group_super_stock_manager'))]"/>
			<field name="domain_force">[(1, '=', 1)]</field>
		</record>

		<record id="stock_move_report_rule" model="ir.rule">
	        <field name="name">Stock Move Report: Limitation</field>
	        <field name="model_id" ref="stock_move_report.model_stock_move_report"/>
	        <field name="groups" eval="[(4, ref('stock.group_stock_user')), (4, ref('stock.group_stock_manager'))]"/>
	        <field name="domain_force">[
				'|',
					('location_id.user_ids', '=', False),
					('location_id.user_ids', '=', user.id),
			]</field>
	    </record>

    	<record id="stock_move_report_rule_super_manager" model="ir.rule">
			<field name="name">Stock Move Report: Super Warehouse Manager</field>
			<field name="model_id" ref="stock_move_report.model_stock_move_report"/>
			<field name="groups" eval="[(4, ref('robo_stock.group_super_stock_manager'))]"/>
			<field name="domain_force">[(1, '=', 1)]</field>
		</record>

		<record id="group_show_accounting_qty" model="res.groups">
			<field name="name">Show accounting date quantity in inventory write-off</field>
            <field name="robo_front" eval="True"/>
            <field name="robo_front_only_shown_to_super" eval="True"/>
            <field name="front_help">
				Show inventory quantity for the accounting date set in inventory write-off
			</field>
            <field name="front_category_id" eval="ref('robo_basic.front_res_groups_category_stock')"/>
        </record>
    </data>
</odoo>